// <auto-generated />
using System;
using CurrencyRateProvider.DbFiller.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CurrencyRateProvider.DbFiller.Migrations
{
    [DbContext(typeof(RateMigrationsDbContext))]
    partial class RateMigrationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CurrencyRateProvider.Common.DAL.Entities.Currency", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<short>("Amount")
                        .HasColumnName("amount");

                    b.Property<string>("Code")
                        .HasColumnName("code")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.HasIndex("Code", "Amount")
                        .IsUnique();

                    b.ToTable("currency");
                });

            modelBuilder.Entity("CurrencyRateProvider.Common.DAL.Entities.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<decimal>("Cost")
                        .HasColumnName("cost");

                    b.Property<short>("CurrencyId")
                        .HasColumnName("currency_id");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date");

                    b.Property<short>("RelativeCurrencyId")
                        .HasColumnName("relative_currency_id");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("RelativeCurrencyId");

                    b.ToTable("rate");
                });

            modelBuilder.Entity("CurrencyRateProvider.Common.DAL.Entities.Rate", b =>
                {
                    b.HasOne("CurrencyRateProvider.Common.DAL.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CurrencyRateProvider.Common.DAL.Entities.Currency", "RelativeCurrency")
                        .WithMany()
                        .HasForeignKey("RelativeCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
